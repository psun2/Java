package ddong;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;


import jdbc_p.GameUserDAO;
import jdbc_p.GameUserDTO;
import jdbc_p.LobbyDAO;
import jdbc_p.LobbyDTO;



public class Main_Server {
   

   ArrayListString userList;
   ArrayListString info;   
   ArrayListObjectOutputStream datalist;
   
   
   boolean chk = false;
   boolean chkk = false;
   String robiid;
   String removeid =;
   String userid =;   
   HashMapString, ObjectOutputStream userdata;
   
   public Main_Server() {
      try {
         ServerSocket server = new ServerSocket(7777);
         System.out.println( ____________________________________);
         System.out.println(                                    );
         System.out.println(   S T A R T S E R V E R            );
         System.out.println(             T E A M  P Y O P Y O   );
         System.out.println(____________________________________);
         System.out.println();
   
         userdata = new HashMapString, ObjectOutputStream();   
         
         userList = new ArrayListString();      
         Collections.synchronizedList(userList); 

         datalist = new ArrayListObjectOutputStream();
         Collections.synchronizedCollection(datalist);
         
         LobbyDAO dao = new LobbyDAO();
         
         while(true) {
            Socket client = server.accept();   
            new Tcp_Server(client).start();   
            System.out.println(유저접속);
         }
         
      } catch (Exception e) {
         System.out.println(접속실패);
         
         
      }
      
   }

   
   
   public class Tcp_Server extends Thread  {
      ObjectOutputStream oos;      
      ObjectInputStream ois;      
      public Tcp_Server(Socket soc) {
         try {
            
            oos = new ObjectOutputStream(soc.getOutputStream());
            ois = new ObjectInputStream(soc.getInputStream());
         
            
            System.out.println(userid);
         } catch (Exception e) {
             TODO Auto-generated catch block
            e.printStackTrace();
         }
      }
      
   
      @Override
      public void run() {
            try {
               
            로그인을 성공하면 map을 통해 유저 정보 , 데이터를 받는다.
            
               
            DDongData data = (DDongData)ois.readObject();
            datalist.add(oos);
            removeid = data.src;
            userid = (String)data.src;
            System.out.println(userid);
            System.out.println(data.src);
         
            userdata.put(userid,oos);
            
            while(ois!=null)
               {    
               DDongData  dataois = (DDongData)ois.readObject();
               
            if(dataois.type.equals(채팅) ) {
               System.out.println(채팅 들어와요);
               sendtoChat(dataois); 
            }else if(dataois.type.equals(게임) ){
               System.out.println(게임 들어와요);
               sendSelect(dataois);
            }else if(dataois.type.equals(로비)) {
               System.out.println(로비 입장);
               sendRoom(dataois);
            }else if(dataois.type.equals(login) ) {
               System.out.println(유저 로그인 입장);
               sendLogin(dataois);
               
               
               
            }
         }       
               
               }catch (Exception e) {
               e.printStackTrace();
            }finally{
               
                  System.out.println(유저나가요);
                  new LobbyDAO().delete(userid);
                  userdata.remove(userid, oos);
               }
          
           }

      채팅 
       public void sendtoChat(DDongData dataois)   
        {
          System.out.println((String)dataois.data);
          System.out.println(userdata.keySet());
          System.out.println(userdata.values());
           System.out.println((String)userdata.values());
         for (ObjectOutputStream ost  userdata.values())
             {
            
                try {
                  ost.writeObject(dataois);
                  ost.flush();
                  ost.reset();
               } catch (IOException e) {
                   TODO Auto-generated catch block
                  e.printStackTrace();
               }
                
            }
        }
       
       유저 가는거
       public void sendSelect(DDongData dataois)   
        {
         for (String dst  dataois.dst) { 
            try {
            	System.out.println();
               userdata.get(0).writeObject(dataois); 여기 에러
               userdata.get(0).flush();
               userdata.get(0).reset();
            }catch (IOException e) {}   
         }
         
          System.out.println(dataois.data);
          for (ObjectOutputStream ost  userdata.values())
             {
                   try {
                      
                      ost.writeObject(dataois);
                     ost.flush();
                     ost.reset();
         
                     System.out.println(잘보내져요 데이터);
                  
               
               } catch (IOException e) {
                   TODO Auto-generated catch block
                  e.printStackTrace();
               }
                
            }
        }
       
      룸메세지
      public void sendRoom(DDongData dataois){
         try {
            oos.writeObject(dataois);
            oos.flush();
            oos.reset();
         } catch (IOException e) {
             TODO Auto-generated catch block
            e.printStackTrace();
         }
      }
      
      
      public void sendLogin(DDongData dataois){
         try {
            for (ObjectOutputStream ost  userdata.values())
             {
            
                try {
                  ost.writeObject(dataois);
                  ost.flush();
                  ost.reset();
               } catch (IOException e) {
                   TODO Auto-generated catch block
                  e.printStackTrace();
               }
                
            }
         } catch (Exception e) {
             TODO Auto-generated catch block
            e.printStackTrace();
         }
      }
      

   }
   public static void main(String[] args) {

      new Main_Server();
   }

}