<?xml version="1.0" encoding="UTF-8" ?>
<!-- 서버와 관련된 환경설정을 하는 xml 파일입니다. -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
	<display-name>110. UserChat_실시간 회원제 채팅 (feat) 동빈나</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<!-- 사용자가 UserRegisterServlet에 접근 할때, /userRegister 곳에 어떠한 post 메시지를 보냄으로서,
	실제로 사용자 정보를 등록 할 수 있게 됩니다.
	 -->
	<servlet>
		<servlet-name>UserRegisterServlet</servlet-name>
		<servlet-class>user.UserRegisterServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserRegisterServlet</servlet-name>
		<!-- url-pattern 은 join.jsp 의 form의 action 주소와 같습니다. -->
		<url-pattern>/userRegister</url-pattern>
	</servlet-mapping>

	<!-- 메시지 전송 -->
	<servlet>
		<servlet-name>ChatSubmitServlet</servlet-name>
		<servlet-class>chat.ChatSubmitServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ChatSubmitServlet</servlet-name>
		<url-pattern>/chatSubmitServlet</url-pattern>
	</servlet-mapping>

	<!-- 채팅내용 불러오기 -->
	<servlet>
		<servlet-name>ChatListServlet</servlet-name>
		<servlet-class>chat.ChatListServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ChatListServlet</servlet-name>
		<url-pattern>/chatListServlet</url-pattern>
	</servlet-mapping>

	<!-- 로그인 -->
	<servlet>
		<servlet-name>UserLoginServlet</servlet-name>
		<servlet-class>user.UserLoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserLoginServlet</servlet-name>
		<url-pattern>/userLogin</url-pattern>
	</servlet-mapping>

	<!-- 읽지않은 메시지 갯수 servlet -->
	<servlet>
		<servlet-name>ChatUnreadServlet</servlet-name>
		<servlet-class>chat.ChatUnreadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ChatUnreadServlet</servlet-name>
		<url-pattern>/chatUnread</url-pattern>
	</servlet-mapping>

	<!-- 특정한 사용자와 최근에 주고 받은 메시지 함 서블릿 -->
	<servlet>
		<servlet-name>ChatBoxServlet</servlet-name>
		<servlet-class>chat.ChatBoxServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ChatBoxServlet</servlet-name>
		<url-pattern>/chatBox</url-pattern>
	</servlet-mapping>

	<!-- 회원정보 수정 -->
	<servlet>
		<servlet-name>UserUpdateServlet</servlet-name>
		<servlet-class>user.UserUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserUpdateServlet</servlet-name>
		<url-pattern>/userUpdate</url-pattern>
	</servlet-mapping>

	<!-- 프로필 사진 수정 -->
	<servlet>
		<servlet-name>UserProfileServlet</servlet-name>
		<servlet-class>user.UserProfileServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserProfileServlet</servlet-name>
		<url-pattern>/userProfile</url-pattern>
	</servlet-mapping>

	<!-- 친구찾기 기능에서 사진까지 출력 하는 서블릿 -->
	<!--
	// 자바스크립트 ajax의 
	// url 의 이름과 servlet class 의 webServlet annotation(javax.servlet.annotation.WebServlet)의 이름이 같으면
	// 굳이 xml파일에서 mapping 을 사용 안하더라도 정상적 인식이 가능합니다.
	
	<servlet>
		<servlet-name>UserFindServlet</servlet-name>
		<servlet-class>user.UserFindServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserFindServlet</servlet-name>
		<url-pattern>/userFind</url-pattern>
	</servlet-mapping>
	-->

	<!-- 글쓰기 servlet -->
	<servlet>
		<servlet-name>BoardWriteServlet</servlet-name>
		<servlet-class>board.BoardWriteServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BoardWriteServlet</servlet-name>
		<url-pattern>/boardWrite</url-pattern>
	</servlet-mapping>

	<!-- 게시글 수정 -->
	<servlet>
		<servlet-name>BoardUpdateServlet</servlet-name>
		<servlet-class>board.BoardUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BoardUpdateServlet</servlet-name>
		<url-pattern>/boardUpdate</url-pattern>
	</servlet-mapping>

</web-app>